/*
 * YaST2: Local security configuration
 *
 * Description:
 *   Helps definition.
 *
 * Authors:
 *   Michal Svec <msvec@suse.cz>
 *
 * $Id$
 */

{

textdomain "security";

define STRINGS() ``{ return $[

  "Main" : $[
    "caption" : UI(_("Local security configuration")),
    "help" :
UI(_("<p>With this module you can change the local security settings.</p>")) +
UI(_("<p>The local security settings consists of the boot configuration, login
settings, password settings, some user adding settings, file permissions
and some other settings.</p>")) +
UI(_("<p>All particular settings are described in the respective dialogs.</p>")) +
UI(_("<p>You can choose one of the preset configurations or you can make your
own settings.</p>")) +
UI(_("<p>Use <b>Home workstation</b> for the computer at home, not connected
to any type of a network.</p>")) +
UI(_("<p>Use <b>Networked workstation</b> for the computer at home, connected
to any type of a network or internet.</p>")) +
UI(_("<p>Use <b>Network server</b> for the computer which will be serving
any kind of service, either network or any other.</p>"))+
UI(_("<p>Or use <b>Custom settings</b> if you want your own configuration.</p>"))
  ],

  "Boot" : $[
    "caption" : UI(_("Boot settings")),
    "help" :
UI(_("<p>In this dialog you can change various boot settings.</p>")) + 
UI(_("<p><b>How to interpret Ctrl-Alt-Del</b><br>
When someone at the console has pressed the CTRL-ALT-DEL key
combination, the system usually reboots. Sometimes it is
desired to ignore this event, for example when the system
serves as both workstation and server.</p>")) + 
UI(_("<p><b>Shutdown behaviour of KDM</b><br>
With KDM you may decide who is allowed to shutdown the machine from KDM.
"))
  ],

  "Login" : $[
    "caption" : UI(_("Login settings")),
    "help" :
UI(_("<p>In this dialog you can change various login settings. These
settings are mainly stored in the '/etc/login.defs' file.</p>")) +
UI(_("<p><b>Seconds to wait after an incorrect login attempt</b><br>
It is useful to wait some time after an incorrect login attempt
to prevent the passwords guessing. On the other hand, make the
time so small that if you mistype the password, you don't need
to wait to long. The sensible value is '3'.</p>")) +
UI(_("<p><b>Record failed login attempts</b><br>
It is useful to know if somebody is trying to log in and failed.
For example if someone is guessing password of other users.
By checking this option, you control if the failed login attempts
will be logged into the system logfile.</p>")) +
UI(_("<p><b>Record successful login attempts</b><br>
Even the successful login attempts logging can be useful. It can
show if somebody is using someone else's account.</p>"))
  ],

  "Password" : $[
    "caption" : UI(_("Password settings")),
    "help" :
UI(_("<p>In this dialog you can change various password settings. These
settings are mainly stored in the \"/etc/login.defs\" file.</p>")) +
UI(_("<b>Checks for new passwords</b><br>
It is wise to choose password not to be very dictionary words, usual
names or other simple things. By checking the box you set some checking
for password to not contain simple words which can be easily guessed.</p>")) +
UI(_("<p><b>Plausibility test for password</b><br>
Sometimes it is even needed that password are enough strange words
that guessing is more hard. Check this box to enable additional
checks.</p>")) +
UI(_("<p><b>Password length</b><br>
Set the minimum and maximum password length.</p>")) +
UI(_("<p><b>Days of password change warning</b><br>
Set the minimum and maximum time for warning if the password must
be changed.</p>")) +
UI(_("<p><b>Days before password expiry warning?</b><br>
This entry sets the number of days the user is warned before his password
expiry. The longer time, the harder for the user guessing passwords.</p>"))
//+ ""
  ],

  "Adduser" : $[
    "caption" : UI(_("Adduser settings")),
    "help" :
UI(_("<p>In this dialog you can change various adduser settings.</p>")) +
UI(_("<p><b>User ID limitations</b><br>
Set the minimum and maximum possible user ID.</p>")) +
UI(_("<p><b>Group ID limitations</b><br>
Set the minimum and maximum possible Group ID.</p>"))
  ],

  "Misc" : $[
    "caption" : UI(_("Miscellaneous settings")),
    "help" :
UI(_("<p>In this dialog you can change miscellaneous settings.</p>")) +
UI(_("<p><b>Setting of files premissions</b><br>
Settings for the permissions of certain system files are set
according to the data in /etc/permissions.secure or
/etc/permissions.easy. Which file is used depends upon this
selection. Launching SuSEconfig sets these permissions
according to /etc/permissions.*. This fixes files with
incorrect permissions whether this occured accidentally or
by intruders.
</p><p>
\"easy\": For most of the system files that are only readable
  for root (via secure) are modified so that other users can
  also read these files.
</p><p>
\"secure\": Certain system files (e.g. /var/log/messages) can
  only be viewed by the user root. Some programs can only be
  launched by root or by daemons, not by an ordinary user.
</p><p>
\"paranoid\":  If you are really paranoid, use this setting.
  You must after that decide, which users will be able to
  run X applications and set-uid programs.
</p>")) +
UI(_("<p><b>User launching updatedb</b><br>
The program updatedb runs regularly, once a day. It scans
your whole filesystem and creates a database (locatedb)
where the location of EVERY file is stored. The database can
be searched by the program \"locate\".
</p><p>
By setting this entry, you select the user to run this
command:
</p><p>
\"nobody\": only files which the user \"nobody\" can access
  are added into the database. All users can choose if the
  file will be in the database or not.
</p><p>
\"root\": all files in the system are added into the
  database
</p>")) +
UI(_("<p><b>Omit current directory from the path of user root</b><br>
On a DOS system, executable files (programs), are first
searched for in the current directory, and in the current
path variable afterwards. In contrast, on a UNIX system they
are exclusively searched for via the search path (variable
PATH).
</p><p>
Some systems set up a 'workaround' by adding the dot (\".\")
to the search path, thus enabling files in the current path
to be found and executed. This is highly dangerous since you
may accidentally launch unknown programs in the current
directory instead of the usual system-wide files. As a
result, creating 'Trojan Horses' which exploit this weakness
and intrude your system is rather easy if you set this
option.
</p><p>
\"yes\": the user root always has to launch programs in the
  current directory prefixed with a \"./\". Example: \"./configure\".
</p><p>
\"no\": the dot (\".\") is attached to the end of the search
  path of root, making it the last to be searched.
</p>")) +
UI(_("<p><b>Disable telnet for user root</b><br>
It is not very wise to allow telnet for the user root. During
the telnet session the passwords are sent in the plain form,
so they can be stolen by the third-party. Check this box to
disable telnet for root.
<\p>"))

  ]
];
};

return STRINGS();

} /* EOF */
