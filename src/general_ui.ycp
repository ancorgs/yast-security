/*
 * YaST2: Local security configuration
 *
 * Description:
 *   General user interface functions.
 *
 * Authors:
 *   Michal Svec <msvec@suse.cz>
 *
 * $Id$
 */

{

textdomain "security";

/* Info box */

define Info(string message) ``{
  any ret = UI(`OpenDialog(
        `opt(`decorated),
        `HBox(
          `HSpacing(1),
          `VBox(
            `VSpacing(0.2),
            `Left(`Label(message)),
            `VSpacing(0.2)
          ),
          `HSpacing(1)
        )
    )
  );
  return ret;
};

define InfoClose() ``{
  any ret = UI(`CloseDialog());
  return ret;
};

/* Popup box */

define Popup(string message) ``{
  map BUTTONS = CallFunction(`buttons());
  UI(`OpenDialog(
        `opt(`decorated),
        `HBox(
          `HSpacing(1),
          `VBox(
            `VSpacing(0.2),
            `Left(`Label(message)),
	    `HBox(
              `PushButton(`id(`ok),`opt(`default), lookup(BUTTONS,`ok)),
	      `PushButton(`id(`cancel),lookup(BUTTONS,`cancel))
	    ),
            `VSpacing(0.2)
          ),
          `HSpacing(1)
        )
    )
  );
  any ret = UI(`UserInput());
  UI(`CloseDialog());
  return ret;
};

define PopupOK(string message) ``{
  map BUTTONS = CallFunction(`buttons());
  UI(`OpenDialog(
        `opt(`decorated),
        `HBox(
          `HSpacing(1),
          `VBox(
            `VSpacing(0.2),
            `Left(`Label(message)),
	    `HBox(
              `PushButton(`id(`ok),`opt(`default), lookup(BUTTONS,`ok))
	    ),
            `VSpacing(0.2)
          ),
          `HSpacing(1)
        )
    )
  );
  any ret = UI(`UserInput());
  UI(`CloseDialog());
  return ret;
};

/* Message box */

define Message(any message) ``{
  map BUTTONS = CallFunction(`buttons());
  UI(`OpenDialog(
        `opt(`decorated),
        `HBox(
          `HSpacing(1),
          `VBox(
            `VSpacing(0.2),
            `Label(sformat("%1",message)),
            `PushButton(`opt(`default), lookup(BUTTONS,`ok)),
            `VSpacing(0.2)
          ),
          `HSpacing(1)
        )
    )
  );
  UI(`UserInput());
  UI(`CloseDialog());
};

/* Debug box */

define Debug(any message) ``{
  Message(message);
};

/* Browse the map */

define BrowseMap(map m) ``{
  list choose = mapkeys(m);
  string|void var = Choose(choose);
  while(var != nil) {
    Message(lookup(m,var));
    choose = maplist(`var,`val,m,``(var));
    var = Choose(choose);
  }
}

/* Choose from the list of strings */

define Choose(list sel) ``{
  string|void item = nil;
  map BUTTONS = CallFunction(`buttons());

  UI(`OpenDialog(
    `VBox(`SelectionBox(`id(`sel), "&Please choose", sel),
      `HBox(`PushButton(`id(`ok), lookup(BUTTONS,`ok)),
        `PushButton(`id(`cancel), lookup(BUTTONS,`cancel)))
    )));

  any ret = nil;
  do {
    ret = UI(`UserInput());
  } while (ret != `cancel && ret != `ok && ret != nil);

  if ((ret == `ok) && (sel != []))
    item = UI(`QueryWidget(`id(`sel), `CurrentItem));

  UI(`CloseDialog());

  return item;
};

}

/* EOF */
