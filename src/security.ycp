/**
 * File:	clients/security.ycp
 * Package:	Security configuration
 * Summary:	Main file
 * Authors:	Michal Svec <msvec@suse.cz>
 *
 * $Id$
 *
 * This is a main file of the module. There is in the file
 * only some calls to the basic functions. The settings are
 * initialized, main dialog is called and then settings are
 * saved.
 */

{

/***
 * <h3> Security configuration
 */

textdomain "security";

/* The main () */
y2milestone("----------------------------------------");
y2milestone("Security module started");

include "security/wizards.ycp";

include "security/io.ycp";
include "security/ui.ycp";
include "security/widgets.ycp";
// map WIDGETS = CallFunction(`widgets());

/* The main() */

y2debug("Security Module started");

map settings = SecurityRead();
y2debug("settings: %1",settings);

WIDGETS = settings2widgets(WIDGETS,settings);
y2debug("WIDGETS: %1",WIDGETS);

Wizard::CreateDialog();
any ret = SecurityMainDialog(settings);
y2debug("WIDGETS: %1",WIDGETS);
y2debug("settings: %1",settings);
settings = widgets2settings(LookupDefault(nil), WIDGETS);
y2debug("settings: %1",settings);
y2debug("ret: %1",ret);

if(ret == `ok) {
    // info text shown at the end of module
    Info(_("Wait while configuration files are updated."));
    y2debug("Write: %1",SecurityWrite(settings));
    InfoClose();
}

/*
ret = SecuritySequence();
y2debug("ret == %1", ret);
*/

y2milestone("Security module finished");
y2milestone("----------------------------------------");
return ret;

/* EOF */
}
