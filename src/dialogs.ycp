/**
 * File:	include/security/dialogs.ycp
 * Package:	Security configuration
 * Summary:	Dialogs definitions
 * Authors:	Michal Svec <msvec@suse.cz>
 *
 * $Id$
 */

{

textdomain "security";

import "Wizard";

include "security/ui.ycp";
include "security/helps.ycp";

/**
 * Read settings dialog
 * @return `next if success, else `abort
 */
global define symbol ReadDialog() ``{

    Wizard::RestoreHelp(HELPS["read"]:"");
    Security::AbortFunction = ``{return PollAbort();};
    boolean ret = Security::Read();
    return ret ? `next : `abort;
}

/**
 * Write settings dialog
 * @return `next if success, else `abort
 */
global define symbol WriteDialog() ``{

    Wizard::RestoreHelp(HELPS["write"]:"");
    Security::AbortFunction = ``{return PollAbort();};
    boolean ret = Security::Write();
    return ret ? `next : `abort;
}

/**
 * Main dialog
 * @return dialog result
 */
global define symbol MainDialog() ``{

    /* Main dialog caption */
    string caption = _("Local security configuration");
    string help = HELPS["main"]:"";

    /* Main dialog contents */
    term contents = nil;

    Wizard::SetContentsButtons(caption, contents, help,
	    BackButtonLabel(), NextButtonLabel());

    any ret = nil;
    while(true) {
	ret = UI::UserInput();

	/* abort? */
	if(ret == `abort || ret == `cancel) {
	    if(ReallyAbort()) break;
	    else continue;
	}
	else if(ret == `back) {
	    break;
	}
	else if(ret == `next) {
	    /* FIXME: check_* */
	    break;
	}
	else {
	    y2error("Unexpected return code: %1", ret);
	    continue;
	}
    };

    if(ret == `next) {
	Security::xxx = UI::QueryWidget(`id(`xxx), `Value);
	// ...
    }

    return ret;
}

/**
 * Password dialog
 * @return dialog result
 */
global define symbol PasswordDialog() ``{

    /* Password dialog caption */
    string caption = _("Password settings");
    string help = HELPS["password"]:"";

    /* Password dialog contents */
    term contents = nil;

    Wizard::SetContentsButtons(caption, contents, help,
	    BackButtonLabel(), NextButtonLabel());

    any ret = nil;
    while(true) {
	ret = UI::UserInput();

	/* abort? */
	if(ret == `abort || ret == `cancel) {
	    if(ReallyAbort()) break;
	    else continue;
	}
	else if(ret == `back) {
	    break;
	}
	else if(ret == `next) {
	    /* FIXME: check_* */
	    break;
	}
	else {
	    y2error("Unexpected return code: %1", ret);
	    continue;
	}
    };

    if(ret == `next) {
	Security::xxx = UI::QueryWidget(`id(`xxx), `Value);
	// ...
    }

    return ret;
}

/**
 * Boot dialog
 * @return dialog result
 */
global define symbol BootDialog() ``{

    /* Boot dialog caption */
    string caption = _("Boot settings");
    string help = HELPS["boot"]:"";

    /* Boot dialog contents */
    term contents = `HVCenter(`HVSquash(`HBox(
	`HSpacing(5),
	`VBox(
	    `VSpacing(2),
	    `Frame(_("Boot permissions"),`HBox(
		`HSpacing(3),
		`VBox(
		    `VSpacing(1),
		    map2widget("CONSOLE_SHUTDOWN"),
		    `VSpacing(0.4),
		    map2widget("KDM_SHUTDOWN"),
		    `VSpacing(1)
		),
		`HSpacing(3)
	    )),
	    `VSpacing(2)
	),
	`HSpacing(5)
    )));

    Wizard::SetContentsButtons(caption, contents, help,
	    BackButtonLabel(), NextButtonLabel());

    any ret = nil;
    while(true) {
	ret = UI::UserInput();

	/* abort? */
	if(ret == `abort || ret == `cancel) {
	    if(ReallyAbort()) break;
	    else continue;
	}
	else if(ret == `back || ret == `next) {
	    break;
	}
	else {
	    y2error("Unexpected return code: %1", ret);
	    continue;
	}
    };

    if(ret == `next) {
	Security::xxx = UI::QueryWidget(`id(`xxx), `Value);
	// ...
    }

    return ret;
}

/**
 * Login dialog
 * @return dialog result
 */
global define symbol LoginDialog() ``{

    /* Login dialog caption */
    string caption = _("Login settings");
    string help = HELPS["login"]:"";

    /* Login dialog contents */
    term contents = nil;

    Wizard::SetContentsButtons(caption, contents, help,
	    BackButtonLabel(), NextButtonLabel());

    any ret = nil;
    while(true) {
	ret = UI::UserInput();

	/* abort? */
	if(ret == `abort || ret == `cancel) {
	    if(ReallyAbort()) break;
	    else continue;
	}
	else if(ret == `back) {
	    break;
	}
	else if(ret == `next) {
	    /* FIXME: check_* */
	    break;
	}
	else {
	    y2error("Unexpected return code: %1", ret);
	    continue;
	}
    };

    if(ret == `next) {
	Security::xxx = UI::QueryWidget(`id(`xxx), `Value);
	// ...
    }

    return ret;
}

/**
 * Adduser dialog
 * @return dialog result
 */
global define symbol AdduserDialog() ``{

    /* Adduser dialog caption */
    string caption = _("Adding user settings");
    string help = HELPS["adduser"]:"";

    /* Adduser dialog contents */
    term contents = nil;

    Wizard::SetContentsButtons(caption, contents, help,
	    BackButtonLabel(), NextButtonLabel());

    any ret = nil;
    while(true) {
	ret = UI::UserInput();

	/* abort? */
	if(ret == `abort || ret == `cancel) {
	    if(ReallyAbort()) break;
	    else continue;
	}
	else if(ret == `back) {
	    break;
	}
	else if(ret == `next) {
	    /* FIXME: check_* */
	    break;
	}
	else {
	    y2error("Unexpected return code: %1", ret);
	    continue;
	}
    };

    if(ret == `next) {
	Security::xxx = UI::QueryWidget(`id(`xxx), `Value);
	// ...
    }

    return ret;
}

/**
 * Misc dialog
 * @return dialog result
 */
global define symbol MiscDialog() ``{

    /* Misc dialog caption */
    string caption = _("Miscellaneous settings");
    string help = HELPS["misc"]:"";

    /* Misc dialog contents */
    term contents = nil;

    Wizard::SetContentsButtons(caption, contents, help,
	    BackButtonLabel(), NextButtonLabel());

    any ret = nil;
    while(true) {
	ret = UI::UserInput();

	/* abort? */
	if(ret == `abort || ret == `cancel) {
	    if(ReallyAbort()) break;
	    else continue;
	}
	else if(ret == `back) {
	    break;
	}
	else if(ret == `next) {
	    /* FIXME: check_* */
	    break;
	}
	else {
	    y2error("Unexpected return code: %1", ret);
	    continue;
	}
    };

    if(ret == `next) {
	Security::xxx = UI::QueryWidget(`id(`xxx), `Value);
	// ...
    }

    return ret;
}

if(false) {
Wizard::CreateDialog();
include "security/widgets.ycp";

//MainDialog();
//PassDialog();
BootDialog();
//LoginDialog();
//AdduserDialog();
//MiscDialog();
}

/* EOF */
}
