/**
 * File:
 *   functions_ui.ycp
 *
 * Module:
 *   Security configuration
 *
 * Summary:
 *   Generally usable user interface functions
 *
 * Authors:
 *   Michal Svec <msvec@suse.cz>
 *
 * $Id$
 *
 * This file contains the generally usable user interface functions.
 * 
 */

{

textdomain "security";

/**
 * Display an info box (text label). It is closed by InfoClose().
 * @param message the message to be displayed
 * @return any success
 * @see InfoClose
 */
global define Info(string message) ``{
  any ret = UI(`OpenDialog(
        `opt(`decorated),
        `HBox(
          `HSpacing(1),
          `VBox(
            `VSpacing(0.2),
            `Left(`Label(message)),
            `VSpacing(0.2)
          ),
          `HSpacing(1)
        )
    )
  );
  return ret;
};

/**
 * Close an info box
 * @return any success
 * @see Info
 */
global define InfoClose() ``{
  any ret = UI(`CloseDialog());
  return ret;
};

/**
 * Display a popup box with text, [OK] and [Cancel] buttons.
 * @param message the message to be displayed
 * @return any the user input
 */
global define Popup(string message) ``{
  map BUTTONS = CallFunction(`ui_buttons());
  UI(`OpenDialog(
        `opt(`decorated),
        `HBox(
          `HSpacing(1),
          `VBox(
            `VSpacing(0.2),
            `Left(`Label(message)),
	    `HBox(
              `PushButton(`id(`ok),`opt(`default), lookup(BUTTONS,`ok)),
	      `PushButton(`id(`cancel),lookup(BUTTONS,`cancel))
	    ),
            `VSpacing(0.2)
          ),
          `HSpacing(1)
        )
    )
  );
  any ret = UI(`UserInput());
  UI(`CloseDialog());
  return ret;
};

/**
 * Display a popup box with text and [OK] button.
 * @param message the message to be displayed
 * @return any the user input
 * @see Popup
 */
global define PopupOK(string message) ``{
  map BUTTONS = CallFunction(`ui_buttons());
  UI(`OpenDialog(
        `opt(`decorated),
        `HBox(
          `HSpacing(1),
          `VBox(
            `VSpacing(0.2),
            `Left(`Label(message)),
	    `HBox(
              `PushButton(`id(`ok),`opt(`default), lookup(BUTTONS,`ok))
	    ),
            `VSpacing(0.2)
          ),
          `HSpacing(1)
        )
    )
  );
  any ret = UI(`UserInput());
  UI(`CloseDialog());
  return ret;
};

/**
 * Display a message box with text and [OK] button.
 * It is almost the same as PopupOK, only its param can be any.
 * @param message the message to be displayed
 * @return any the user input
 * @see PopupOK
 */
global define Message(any message) ``{
  map BUTTONS = CallFunction(`ui_buttons());
  UI(`OpenDialog(
        `opt(`decorated),
        `HBox(
          `HSpacing(1),
          `VBox(
            `VSpacing(0.2),
            `Label(sformat("%1",message)),
            `PushButton(`opt(`default), lookup(BUTTONS,`ok)),
            `VSpacing(0.2)
          ),
          `HSpacing(1)
        )
    )
  );
  UI(`UserInput());
  UI(`CloseDialog());
};

/**
 * Display a debug box. This is an alias for the Message.
 * @see Message
 */
global define Debug(any message) ``{
  Message(message);
};

/**
 * Browse the map 
 * @param m a map to browse
 * @see Choose
 */
global define BrowseMap(map m) ``{
  list choose = mapkeys(m);
  string var = Choose(choose);
  while(var!="") {
    Message(lookup(m,var));
    choose = maplist(`var,`val,m,``(var));
    var = Choose(choose);
  }
}

/**
 * Choose from the list of strings 
 * @param sel a list of strings
 * @return string the selected string
 */
global define Choose(list sel) ``{
  string item = nil;
  map BUTTONS = CallFunction(`ui_buttons());

  UI(`OpenDialog(
    `VBox(`SelectionBox(`id(`sel), _("&Please choose"), sel),
      `HBox(`PushButton(`id(`ok), lookup(BUTTONS,`ok)),
        `PushButton(`id(`cancel), lookup(BUTTONS,`cancel)))
    )));

  any ret = nil;
  do {
    ret = UI(`UserInput());
  } while (ret != `cancel && ret != `ok && ret != nil);

  if ((ret == `ok) && (sel != []))
    item = UI(`QueryWidget(`id(`sel), `CurrentItem));

  UI(`CloseDialog());

  return item;
};

}

/* EOF */
